function selectColor(colorType){var cx=130,cy=130,cz=130;switch(colorType){case 0:var cR=Math.random();if(cR>.5){cx=130,cy=30,cz=190}else{cx=30,cy=130,cz=190}break;case 1:var cR=Math.random();if(cR>.5){cx=190,cy=30,cz=130}else{cx=30,cy=190,cz=130}break;case 2:var cR=Math.random();if(cR>.5){cx=130,cy=30,cz=190}else{cx=190,cy=130,cz=30}break;case 3:var cR=Math.random();if(cR>.5){cx=170,cy=10,cz=150}else{cx=190,cy=130,cz=30}break;case 4:var cR=Math.random();if(cR>.5){cx=30,cy=150,cz=190}else{cx=190,cy=130,cz=30}break;case 5:var cR=Math.random();if(cR>.5){cx=0,cy=140,cz=190}else{cx=160,cy=180,cz=20}break;case 6:var cR=Math.random();if(cR>.5){cx=0,cy=0,cz=0}else{cx=255,cy=255,cz=255}break}return rgb_to_hex(cx,cy,cz)}function blend_colors(color1,color2,percentage,mode="hex"){color1=color1||"#000000";color2=color2||"#ffffff";percentage=percentage||.5;if(color1.length!=4&&color1.length!=7)throw new error("colors must be provided as hexes");if(color2.length!=4&&color2.length!=7)throw new error("colors must be provided as hexes");if(percentage>1||percentage<0)throw new error("percentage must be between 0 and 1");if(color1.length==4)color1=color1[1]+color1[1]+color1[2]+color1[2]+color1[3]+color1[3];else color1=color1.substring(1);if(color2.length==4)color2=color2[1]+color2[1]+color2[2]+color2[2]+color2[3]+color2[3];else color2=color2.substring(1);color1=[parseInt(color1[0]+color1[1],16),parseInt(color1[2]+color1[3],16),parseInt(color1[4]+color1[5],16)];color2=[parseInt(color2[0]+color2[1],16),parseInt(color2[2]+color2[3],16),parseInt(color2[4]+color2[5],16)];var color3=[(1-percentage)*color1[0]+percentage*color2[0],(1-percentage)*color1[1]+percentage*color2[1],(1-percentage)*color1[2]+percentage*color2[2]];if(mode=="rgb"){return color3}color3=rgb_to_hex(color3[0],color3[1],color3[2]);return color3}function int_to_hex(num){var hex=Math.round(num).toString(16);if(hex.length==1)hex="0"+hex;return hex}function rgb_to_hex(r,g,b){return"#"+int_to_hex(r)+int_to_hex(g)+int_to_hex(b)}function mixColor(pairs,intensity){for(const pair of pairs){color1=pair[0].render.fillStyle;color2=pair[1].render.fillStyle;border1=pair[0].render.strokeStyle;border2=pair[1].render.strokeStyle;pair[0].render.fillStyle=blend_colors(color1,color2,intensity);pair[1].render.fillStyle=blend_colors(color2,color1,intensity);k1=blend_colors(border1,border2,intensity);k2=blend_colors(border2,border1,intensity);pair[0].render.strokeStyle=blend_colors(k1,"#000000",.0026);pair[1].render.strokeStyle=blend_colors(k2,"#000000",.0026)}}function getCurvePoints(apoints,tension,numOfSeg,mode,close){"use strict";var points=[...apoints];if(mode){points=[];for(const vect of apoints){points=points.concat(vectToPoint(vect))}}if(typeof points==="undefined"||points.length<2)return new Float32Array(0);tension=typeof tension==="number"?tension:.5;numOfSeg=typeof numOfSeg==="number"?numOfSeg:25;var pts,i=1,l=points.length,rPos=0,rLen=(l-2)*numOfSeg+2+(close?2*numOfSeg:0),res=new Float32Array(rLen),cache=new Float32Array(numOfSeg+2<<2),cachePtr=4;pts=points.slice(0);if(close){pts.unshift(points[l-1]);pts.unshift(points[l-2]);pts.push(points[0],points[1])}else{pts.unshift(points[1]);pts.unshift(points[0]);pts.push(points[l-2],points[l-1])}cache[0]=1;for(;i<numOfSeg;i++){var st=i/numOfSeg,st2=st*st,st3=st2*st,st23=st3*2,st32=st2*3;cache[cachePtr++]=st23-st32+1;cache[cachePtr++]=st32-st23;cache[cachePtr++]=st3-2*st2+st;cache[cachePtr++]=st3-st2}cache[++cachePtr]=1;parse(pts,cache,l,tension);if(close){pts=[];pts.push(points[l-4],points[l-3],points[l-2],points[l-1],points[0],points[1],points[2],points[3]);parse(pts,cache,4,tension)}function parse(pts,cache,l,tension){for(var i=2,t;i<l;i+=2){var pt1=pts[i],pt2=pts[i+1],pt3=pts[i+2],pt4=pts[i+3],t1x=(pt3-pts[i-2])*tension,t1y=(pt4-pts[i-1])*tension,t2x=(pts[i+4]-pt1)*tension,t2y=(pts[i+5]-pt2)*tension,c=0,c1,c2,c3,c4;for(t=0;t<numOfSeg;t++){c1=cache[c++];c2=cache[c++];c3=cache[c++];c4=cache[c++];res[rPos++]=c1*pt1+c2*pt3+c3*t1x+c4*t2x;res[rPos++]=c1*pt2+c2*pt4+c3*t1y+c4*t2y}}}l=close?0:points.length-2;res[rPos++]=points[l++];res[rPos]=points[l];if(mode){const result=[];for(var i=0;i<res.length;i+=2){result.push(pointToVect(res[i],res[i+1]))}return result}return res}function drawLine(ctx,vectOne,vectTwo){ctx.strokeStyle="#ffffff";ctx.lineWidth=5;ctx.beginPath();ctx.moveTo(vectOne.x,vectOne.y);ctx.lineTo(vectTwo.x,vectTwo.y);ctx.stroke();ctx.closePath()}const modeSelector=document.querySelector("#form-div form #mode");const blendingInput=document.querySelector("#form-div form #colorMode");const intensityInput=document.querySelector("#form-div form #intensity");const countInput=document.querySelector("#form-div form #count");const startBtn=document.querySelector("#start-btn");const stopBtn=document.querySelector("#stop-btn");const resetBtn=document.querySelector("#reset-btn");const configBtn=document.querySelector("#config-btn");const SettingForm=document.querySelector("#form-div form");const matterContainer=document.querySelector("#matter-container");const modes=["ball","box","fluid","chain"];const THICCNESS=1e5;const myParticles=[];const myConstraints=[];const scale=.6;var blending=true;var intensity=.013;var iter=3;var mode="3";var ground;var leftWall;var rightWall;const Engine=Matter.Engine,Render=Matter.Render,Runner=Matter.Runner,Bodies=Matter.Bodies,Detector=Matter.Detector,Composite=Matter.Composite,Constraint=Matter.Constraint;var engine=Engine.create();var render=Render.create({element:matterContainer,engine:engine,options:{width:matterContainer.clientWidth,height:matterContainer.clientHeight,background:"transparent",wireframes:false,showAngleIndicator:false}});var detector=Detector.create();var state=1;const cnv=document.querySelector("#matter-container canvas");const c=cnv.getContext("2d");function findMag(vector){return(vector.x**2+vector.y**2)**.5}function subtractVectors(v1,v2){return{x:v2.x-v1.x,y:v2.y-v1.y}}function findUnit(vector){const mag=findMag(vector);return{x:vector.x/mag,y:vector.y/mag}}function pointToVect(x,y){return{x:x,y:y}}function vectToPoint(vect){return[vect.x,vect.y]}class Particle{constructor(options,colorType){if(!options){return}this.color=selectColor(colorType);this.render={fillStyle:this.color,strokeStyle:this.color,lineWidth:1};this.options={...options,frictionAir:1e-5,render:this.render};this.chains=[]}addToWorld(body){if(!body){Composite.add(engine.world,this.body)}else{Composite.add(engine.world,body)}}}class Ball extends Particle{constructor(x,y,r,colorType=0,isStatic){super({friction:.9,restitution:.9,isStatic:isStatic},colorType);this.body=Bodies.circle(x,y,r,this.options);this.addToWorld()}}class Boundary{constructor(x,y,w,h){const options={isStatic:true};this.body=Bodies.rectangle(x,y,w,h,options);Composite.add(engine.world,this.body)}respose(x,y){Matter.Body.setPosition(this.body,Matter.Vector.create(x,y))}}class Box extends Particle{constructor(x,y,w,h,colorType,isStatic){super({friction:.3,restitution:0,isStatic:isStatic},colorType);this.body=Bodies.rectangle(x,y,w,h,this.options);this.addToWorld()}}class Joint extends Particle{constructor(x,y,r){super({friction:1,frictionAir:0,restitution:0});this.body=Bodies.circle(x,y,r,this.options);this.body.render.visible=false;this.body.collisionFilter.group=-5;this.addToWorld()}}class Chain extends Particle{constructor(bodyA,bodyB,stiffness){super();this.bodyA=bodyA;this.bodyB=bodyB;this.length=findMag(subtractVectors(bodyA.position,bodyB.position));this.stiffness=stiffness;this.dx=this.length;this.bodies=[]}createChain(){const unitDist=this.findDistUnit();const num=15;this.dx=this.length/num;this.bodies.push(this.bodyA.position);var first=this.bodyA;for(let i=1;i<num;i++){const x=this.bodyA.position.x+unitDist.x*i*this.dx;const y=this.bodyA.position.y+unitDist.y*i*this.dx;const joint=new Joint(x,y,1);this.createConstraint(first,joint.body);first=joint.body;this.bodies.push(first.position)}this.createConstraint(first,this.bodyB);this.bodies.push(this.bodyB.position)}createConstraint(bodyA,bodyB){var options={bodyA:bodyA,bodyB:bodyB,length:this.dx,stiffness:this.stiffness,render:{visible:false}};var constraint=Constraint.create(options);this.addToWorld(constraint)}distribute(){}draw(ctx){const curvePoints=getCurvePoints(this.bodies,.8,150,true);for(var i=0;i<curvePoints.length-1;i++){drawLine(ctx,curvePoints[i],curvePoints[i+1])}}findDistUnit=function(){const dist=subtractVectors(this.bodyA.position,this.bodyB.position);const unitDist=findUnit(dist);return unitDist}}class Fluid extends Particle{constructor(x,y,r,colorType=0,isStatic){super({friction:.8,restitution:.6,isStatic:isStatic},colorType);this.body=Bodies.circle(x,y,r,this.options);this.addToWorld()}}class Mouse{constructor(){let mouse=Matter.Mouse.create(render.canvas);const constraint={stiffness:.2,render:{visible:false}};this.body=Matter.MouseConstraint.create(engine,{mouse:mouse,constraint:constraint});Composite.add(engine.world,this.body)}removeListener(){this.body.mouse.element.removeEventListener("mousewheel",this.body.mouse.mousewheel);this.body.mouse.element.removeEventListener("DOMMouseScroll",this.body.mouse.mousewheel)}hasParticle(){const sticked=this.body.body;if(!sticked){return}var color1=sticked.render.fillStyle;var color2="#ffffff";sticked.render.fillStyle=blend_colors(color1,color2,.06);sticked.render.strokeStyle=blend_colors(color1,color2,.001)}}class Utility{constructor(colorType){this.color=selectColor(colorType);this.chains=[]}}var rColor;function createParticle(mymode){rColor=Math.floor(Math.random()*7);myParticles.length=0;myConstraints.length=0;Detector.clear(detector);for(let i=0;i<iter;i++){var aBody=undefined;var rSize=(Math.random()*30+10)*150/500;var rWidth=Math.random()*matterContainer.clientWidth;var rHeight=Math.random()*matterContainer.clientHeight;if(mymode=="0"){aBody=new Ball(rWidth,rHeight,rSize,rColor)}else if(mymode=="1"){aBody=new Box(rWidth,rHeight,rSize*2,rSize*2,rColor)}else if(mymode=="2"){aBody=new Fluid(rWidth,rHeight,7,rColor)}else if(mymode=="3"){if(i>4)break;aBody=new Ball(rWidth,rHeight,12,rColor);rWidth=Math.random()*matterContainer.clientWidth;rHeight=Math.random()*matterContainer.clientHeight;var bBody=new Ball(rWidth,rHeight,12,rColor);bBody.body.collisionFilter.group=5;myParticles.push(bBody.body);var chain=new Chain(aBody.body,bBody.body,.99999);chain.createChain();myConstraints.push(chain)}if(aBody){aBody.body.collisionFilter.group=5;myParticles.push(aBody.body)}}Detector.setBodies(detector,myParticles)}function createBorders(){ground=new Boundary(matterContainer.clientWidth/2,matterContainer.clientHeight+THICCNESS/2,27184,THICCNESS);leftWall=new Boundary(0-THICCNESS/2,matterContainer.clientHeight/2,THICCNESS,matterContainer.clientHeight*5);rightWall=new Boundary(matterContainer.clientWidth+THICCNESS/2,matterContainer.clientHeight/2,THICCNESS,matterContainer.clientHeight*5)}function handleForm(){if(blendingInput.checked){blending=true;intensity=intensityInput.value}else{blending=false}if(parseInt(countInput.value)>=countInput.min&&parseInt(countInput.value)<=countInput.max&&parseInt(countInput.value)){iter=parseInt(countInput.value)}if(modeSelector.value){mode=modeSelector.value}}function assignSetting(){modeSelector.value=mode;intensityInput.value=intensity;countInput.value=iter;blendingInput.checked=blending}function configSim(event){event.preventDefault();handleForm();Composite.clear(engine.world);Engine.clear(engine);createParticle(mode);createBorders();mouse=new Mouse;mouse.removeListener()}configBtn.addEventListener("click",configSim);modeSelector.addEventListener("input",function(){if(modeSelector.value=="3"){countInput.max=10}else{countInput.max=700}});function startSim(){state=1}function stopSim(){state=0}function resetSim(event){event.preventDefault();Composite.clear(engine.world);Engine.clear(engine);assignSetting();createParticle(mode);createBorders();mouse=new Mouse;mouse.removeListener()}startBtn.addEventListener("click",startSim);stopBtn.addEventListener("click",stopSim);resetBtn.addEventListener("click",resetSim);function handleResize(matterContainer){render.canvas.width=matterContainer.clientWidth;render.canvas.height=matterContainer.clientHeight;ground.respose(matterContainer.clientWidth/2,matterContainer.clientHeight+THICCNESS/2);rightWall.respose(matterContainer.clientWidth+THICCNESS/2,matterContainer.clientHeight/2)}window.addEventListener("resize",()=>handleResize(matterContainer));engine.gravity.y=.98;createParticle(mode);assignSetting();createBorders();var mouse=new Mouse;mouse.removeListener();Render.run(render);function draw(){window.requestAnimationFrame(draw);if(state==1){Engine.update(engine);c.fillStyle="#fff";for(const cstObj of myConstraints){cstObj.draw(c)}if(blending){mouse.hasParticle(rColor);const collisions=Detector.collisions(detector);const collisionPairs=collisions.map(a=>[a.bodyA,a.bodyB]);mixColor(collisionPairs,intensity)}}}draw();